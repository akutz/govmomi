FROM golang:1.19.4

################################################################################
##                            CONFIGURE LOCALE                                ##
################################################################################
# Set the locale so that the gist command is happy.
ENV LANG=en_US.UTF-8 LC_ALL=C.UTF-8


################################################################################
##                             PACKAGE UPDATES                                ##
################################################################################
# Install the dependencies. The list is a uniion of the dependencies required
# by the following images:
#   * https://github.com/vmware/simple-k8s-test-env/blob/master/e2e/Dockerfile
#   * https://github.com/kubernetes/test-infra/blob/master/images/bootstrap/Dockerfile
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ca-certificates \
      curl \
      git \
      jq \
      locales \
      python3 \
      python3-pip \
      ruby \
      tar \
      unzip \
      wget \
      zip && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/* && \
    pip3 install setuptools wheel --upgrade && \
    pip3 install awscli --upgrade && \
    gem install gist


################################################################################
##                             DOCKER-IN-DOCKER                               ##
################################################################################
# Install Docker deps, some of these are already installed in the image but
# that's fine since they won't re-install and we can reuse the code below
# for another image someday.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      apt-transport-https \
      ca-certificates \
      curl \
      gnupg2 \
      software-properties-common \
      lsb-release && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/*

# Add the Docker apt-repository
RUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "${ID}")/gpg | \
    gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker
RUN apt-get update && \
    apt-get install -y --no-install-recommends docker-ce=5:20.10.* && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/* && \
    sed -i 's/cgroupfs_mount$/#cgroupfs_mount\n/' /etc/init.d/docker

# Move Docker's storage location
RUN echo 'DOCKER_OPTS="${DOCKER_OPTS} --data-root=/docker-graph"' | \
    tee --append /etc/default/docker

# NOTE this should be mounted and persisted as a volume ideally (!)
# We will make a fallback one now just in case
RUN mkdir /docker-graph

# Setting this environment variable is an easy way for processes running
# in the container to know DinD is enabled.
ENV DOCKER_IN_DOCKER_ENABLED=true

#
# To use Docker in the container:
#
#   * the container must be launched with the --privileged flag
#   * start docker in the container with "service docker start"
#


################################################################################
##                              CLONE GOVMOMI                                 ##
################################################################################

WORKDIR /govmomi
RUN git clone https://github.com/vmware/govmomi . && \
    make install
